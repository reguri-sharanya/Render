package android.util;

import android.annotation.Nullable;
import java.util.Collection;
import java.util.Map;
import java.util.Set;
import java.util.Map.Entry;

public final class ArrayMap<K, V> implements Map<K, V> {
    public ArrayMap() {
        throw new RuntimeException("Stub!");
    }

    public ArrayMap(int capacity) {
        throw new RuntimeException("Stub!");
    }

    public ArrayMap(ArrayMap<K, V> map) {
        throw new RuntimeException("Stub!");
    }

    public void clear() {
        throw new RuntimeException("Stub!");
    }

    public void ensureCapacity(int minimumCapacity) {
        throw new RuntimeException("Stub!");
    }

    public boolean containsKey(Object key) {
        throw new RuntimeException("Stub!");
    }

    public int indexOfKey(Object key) {
        throw new RuntimeException("Stub!");
    }

    public int indexOfValue(Object value) {
        throw new RuntimeException("Stub!");
    }

    public boolean containsValue(Object value) {
        throw new RuntimeException("Stub!");
    }

    public V get(Object key) {
        throw new RuntimeException("Stub!");
    }

    public K keyAt(int index) {
        throw new RuntimeException("Stub!");
    }

    public V valueAt(int index) {
        throw new RuntimeException("Stub!");
    }

    public V setValueAt(int index, V value) {
        throw new RuntimeException("Stub!");
    }

    public boolean isEmpty() {
        throw new RuntimeException("Stub!");
    }

    public V put(K key, V value) {
        throw new RuntimeException("Stub!");
    }

    public void putAll(ArrayMap<? extends K, ? extends V> array) {
        throw new RuntimeException("Stub!");
    }

    public V remove(Object key) {
        throw new RuntimeException("Stub!");
    }

    public V removeAt(int index) {
        throw new RuntimeException("Stub!");
    }

    public int size() {
        throw new RuntimeException("Stub!");
    }

    public boolean equals(@Nullable Object object) {
        throw new RuntimeException("Stub!");
    }

    public int hashCode() {
        throw new RuntimeException("Stub!");
    }

    public String toString() {
        throw new RuntimeException("Stub!");
    }

    public boolean containsAll(Collection<?> collection) {
        throw new RuntimeException("Stub!");
    }

    public void putAll(Map<? extends K, ? extends V> map) {
        throw new RuntimeException("Stub!");
    }

    public boolean removeAll(Collection<?> collection) {
        throw new RuntimeException("Stub!");
    }

    public boolean retainAll(Collection<?> collection) {
        throw new RuntimeException("Stub!");
    }

    public Set<Entry<K, V>> entrySet() {
        throw new RuntimeException("Stub!");
    }

    public Set<K> keySet() {
        throw new RuntimeException("Stub!");
    }

    public Collection<V> values() {
        throw new RuntimeException("Stub!");
    }
}
